#
# AlcoTools - Alcoholicz dupe checker, zipscript, and utilities.
# Copyright (c) 2005-2006 Alcoholicz Scripting Team
#
# Module Name:
#   Makefile
#
# Author:
#   neoxed (neoxed@gmail.com) Jul 17, 2005
#
# Abstract:
#   Build configuration file for NMAKE, or a compatible tool.
#
#   Usage:
#     nmake -f makefile.win [OPTION=1 ...]
#
#   Options:
#     DEBUG      - Toggle symbolic debugging.
#     MEMDEBUG   - Toggle memory debugging.
#     STATIC_CRT - Toggle static CRT builds.
#     STATIC_LIB - Toggle static library builds.
#
#   Libraries:
#     APR_DIR    - SQLite include and library location.
#     SQLITE_DIR - SQLite include and library location.
#     ZLIB_DIR   - Zlib include and library location.
#

## Release version.
VERSION     = 0.1.0

## Source locations
TOP         = .
SRC_DIR     = $(TOP)\src
WIN_DIR     = $(TOP)\win

## Compiler options
CC          = cl
LD          = link
RC          = rc
CFLAGS      = /nologo /W4
LFLAGS      = /nologo
RFLAGS      = /r

# -------------------------------------------------------------------------

!if "$(STATIC_CRT)" == "1"
!message *** Option: Static CRT
CRTLIB      = /MT
CFLAGS      = $(CFLAGS) /DSTATIC_CRT
!else
!message *** Option: Dynamic CRT
CRTLIB      = /MD
CFLAGS      = $(CFLAGS) /DDYNAMIC_CRT
!endif

!if "$(STATIC_LIB)" == "1"
!message *** Option: Static Libraries
CFLAGS      = $(CFLAGS) /DSTATIC_LIB
!else
!message *** Option: Dynamic Libraries
CFLAGS      = $(CFLAGS) /DDYNAMIC_LIB
!endif

!if "$(DEBUG)" == "1"
!message *** Option: Debug Symbols
OUT_DIR     = Debug
CFLAGS      = $(CFLAGS) /Zi $(CRTLIB)d /DDEBUG
LFLAGS      = $(LFLAGS) /DEBUG
!else
OUT_DIR     = Release
CFLAGS      = $(CFLAGS) /Ox /GF /GL /GS- $(CRTLIB) /DNDEBUG
LFLAGS      = $(LFLAGS) /RELEASE /LTCG:STATUS /OPT:NOWIN98 /OPT:REF
!endif

!if "$(MEMDEBUG)" == "1"
!message *** Option: Memory Debugging
CFLAGS      = $(CFLAGS) /DDEBUG_MEMORY=1
!endif

# -------------------------------------------------------------------------

!if !exist("makefile.win")
!   error You must run this makefile from the directory it is located in.
!endif

# -------------------------------------------------------------------------

!if !defined(APR_DIR)
!   error Unable to find APR files; the APR_DIR variable is not set.
!endif

APR_DIR     = $(APR_DIR:/=\)
APR_INC     = $(APR_DIR)\include
APR_DLL     = $(APR_DIR)\libapr.dll
APR_MANI    = $(APR_DIR)\libapr.dll.manifest
APR_IMPORT  = $(APR_DIR)\libapr.lib
APR_STATIC  = $(APR_DIR)\apr.lib

!if !exist("$(APR_INC)\apr.h")
!   error Unable to find "apr.h"; the APR_DIR variable is incorrect.
!endif

!if "$(STATIC_LIB)" == "1"
!   if !exist("$(APR_STATIC)")
!       error Unable to find "apr.lib"; the APR_DIR variable is incorrect.
!   endif
APR_LIB     = $(APR_STATIC)
!else
!   if !exist("$(APR_DLL)")
!      error Unable to find "libapr.dll"; the APR_DIR variable is incorrect.
!   endif
!   if !exist("$(APR_MANI)")
!      error Unable to find "libapr.dll.manifest"; the APR_DIR variable is incorrect.
!   endif
!   if !exist("$(APR_IMPORT)")
!      error Unable to find "libapr.lib"; the APR_DIR variable is incorrect.
!   endif
APR_LIB     = $(APR_IMPORT)
!endif

# -------------------------------------------------------------------------

!if !defined(SQLITE_DIR)
!   error Unable to find SQLite files; the SQLITE_DIR variable is not set.
!endif

SQLITE_DIR    = $(SQLITE_DIR:/=\)
SQLITE_INC    = $(SQLITE_DIR)\include
SQLITE_DLL    = $(SQLITE_DIR)\sqlite3.dll
SQLITE_MANI   = $(SQLITE_DIR)\sqlite3.dll.manifest
SQLITE_IMPORT = $(SQLITE_DIR)\sqlite3.lib
SQLITE_STATIC = $(SQLITE_DIR)\sqlite3-static.lib

!if !exist("$(SQLITE_INC)\sqlite3.h")
!   error Unable to find "sqlite3.h"; the SQLITE_DIR variable is incorrect.
!endif

!if "$(STATIC_LIB)" == "1"
!   if !exist("$(SQLITE_STATIC)")
!       error Unable to find "sqlite3-static.lib"; the SQLITE_DIR variable is incorrect.
!   endif
SQLITE_LIB  = $(SQLITE_STATIC)
!else
!   if !exist("$(SQLITE_DLL)")
!       error Unable to find "sqlite3.dll"; the SQLITE_DIR variable is incorrect.
!   endif
!   if !exist("$(SQLITE_MANI)")
!       error Unable to find "sqlite3.dll.manifest"; the SQLITE_DIR variable is incorrect.
!   endif
!   if !exist("$(SQLITE_IMPORT)")
!       error Unable to find "sqlite3.lib"; the SQLITE_DIR variable is incorrect.
!   endif
SQLITE_LIB  = $(SQLITE_IMPORT)
!endif

# -------------------------------------------------------------------------

!if !defined(ZLIB_DIR)
!   error Unable to find Zlib files; the ZLIB_DIR variable is not set.
!endif

ZLIB_DIR    = $(ZLIB_DIR:/=\)
ZLIB_INC    = $(ZLIB_DIR)\include
ZLIB_DLL    = $(ZLIB_DIR)\zlib.dll
ZLIB_MANI   = $(ZLIB_DIR)\zlib.dll.manifest
ZLIB_IMPORT = $(ZLIB_DIR)\zlib.lib
ZLIB_STATIC = $(ZLIB_DIR)\zlib-static.lib

!if !exist("$(ZLIB_INC)\zlib.h")
!   error Unable to find "zlib.h"; the ZLIB_DIR variable is incorrect.
!endif

!if "$(STATIC_LIB)" == "1"
!   if !exist("$(ZLIB_STATIC)")
!       error Unable to find "zlib-static.lib"; the ZLIB_DIR variable is incorrect.
!   endif
ZLIB_LIB    = $(ZLIB_STATIC)
!else
!   if !exist("$(ZLIB_DLL)")
!       error Unable to find "zlib.dll"; the ZLIB_DIR variable is incorrect.
!   endif
!   if !exist("$(ZLIB_MANI)")
!       error Unable to find "zlib.dll.manifest"; the ZLIB_DIR variable is incorrect.
!   endif
!   if !exist("$(ZLIB_IMPORT)")
!       error Unable to find "zlib.lib"; the ZLIB_DIR variable is incorrect.
!   endif
ZLIB_LIB    = $(ZLIB_IMPORT)
!endif

# -------------------------------------------------------------------------

OUT_FILE    = $(OUT_DIR)\AlcoTools.exe
TMP_DIR     = $(OUT_DIR)\tmp

!if "$(STATIC_LIB)" == "1"
DEPENDS     = nul
!else
DEPENDS     = "$(APR_DLL)" "$(APR_MANI)" "$(SQLITE_DLL)" "$(SQLITE_MANI)" "$(ZLIB_DLL)" "$(ZLIB_MANI)"
!endif

INC_DIRS    = /I "$(APR_INC)" /I "$(SQLITE_INC)" /I "$(ZLIB_INC)"

OBJ_FILES   = $(TMP_DIR)\cfgread.obj\
              $(TMP_DIR)\crc32.obj\
              $(TMP_DIR)\dynstring.obj\
              $(TMP_DIR)\encoding.obj\
              $(TMP_DIR)\events.obj\
              $(TMP_DIR)\logging.obj\
              $(TMP_DIR)\main.obj\
              $(TMP_DIR)\template.obj\
              $(TMP_DIR)\utfconvert.obj\
              $(TMP_DIR)\utils.obj

RES_FILES   = $(TMP_DIR)\tools.res

# -------------------------------------------------------------------------

VERSION_RES = $(VERSION:.=,),0

CFLAGS      = $(CFLAGS) /D "VERSION=$(VERSION)" /D "VERSION_RES=$(VERSION_RES)" $(INC_DIRS)
RFLAGS      = $(RFLAGS) /D "VERSION=$(VERSION)" /D "VERSION_RES=$(VERSION_RES)" $(INC_DIRS)
LFLAGS      = $(LFLAGS) advapi32.lib shlwapi.lib ws2_32.lib "$(APR_LIB)" "$(SQLITE_LIB)" "$(ZLIB_LIB)"

# -------------------------------------------------------------------------

{$(SRC_DIR)}.c{$(TMP_DIR)}.obj::
    $(CC) -c $(CFLAGS) -Fo$(TMP_DIR)\ @<<
$<
<<

{$(WIN_DIR)}.rc{$(TMP_DIR)}.res:
	$(RC) $(RFLAGS) -fo $@ $<

# -------------------------------------------------------------------------

default: all

all: setup $(OUT_FILE)

clean:
    @DEL *.cod *.ilk *.obj *.pdb
    @IF EXIST "$(OUT_FILE)" DEL /F "$(OUT_FILE)"
    @IF EXIST "$(TMP_DIR)" RMDIR /Q /S "$(TMP_DIR)"

distclean: clean
    @IF EXIST Debug RMDIR /Q /S Debug
    @IF EXIST Release RMDIR /Q /S Release

setup:
    @IF NOT EXIST "$(OUT_DIR)" MKDIR "$(OUT_DIR)"
    @IF NOT EXIST "$(TMP_DIR)" MKDIR "$(TMP_DIR)"

$(OUT_FILE): $(OBJ_FILES) $(RES_FILES)
    $(LD) $(LFLAGS) /OUT:$@ @<<
$**
<<
    @COPY /Y $(DEPENDS) "$(OUT_DIR)" > nul
