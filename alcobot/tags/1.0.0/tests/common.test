#
# AlcoBot - Alcoholicz site bot.
# Copyright (c) 2005-2006 Alcoholicz Scripting Team
#
# Module Name:
#   Common Tests
#
# Author:
#   neoxed (neoxed@gmail.com) Sep 4, 2005
#
# Abstract:
#   Implements regression tests for common functions.
#

package require tcltest 2
namespace import -force ::tcltest::*

################################################################################
# ArgsToList                                                                   #
################################################################################

test common-1.1 {ArgsToList: nothing} {
    ArgsToList {one two three four}
} [list one two three four]

test common-1.2 {ArgsToList: spacing} {
    ArgsToList {    one        two     three       four        }
} [list one two three four]

test common-1.3 {ArgsToList: trailing char} {
    ArgsToList {    one        two     three       four        .}
} [list one two three four .]

test common-1.4 {ArgsToList: quotes} {
    ArgsToList {one "two three" four}
} [list one {two three} four]

test common-1.5 {ArgsToList: quotes and tabs} {
    ArgsToList {one	"two	three"	four}
} [list one {two	three} four]

test common-1.6 {ArgsToList: quoted text} {
    ArgsToList {one "two three four"}
} [list one {two three four}]

test common-1.7 {ArgsToList: open quote} {
    ArgsToList "one \"two three four"
} [list one {two three four}]

test common-1.8 {ArgsToList: ending quote} {
    ArgsToList "one two three four \""
} [list one two three four {}]

################################################################################
# JoinLiteral                                                                  #
################################################################################

test common-2.1 {JoinLiteral: nothing} {
    JoinLiteral [list]
} {}

test common-2.2 {JoinLiteral: one element} {
    JoinLiteral [list one]
} {one}

test common-2.3 {JoinLiteral: two elements} {
    JoinLiteral [list one two]
} {one and two}

test common-2.4 {JoinLiteral: two elements, or} {
    JoinLiteral [list one two] or
} {one or two}

test common-2.5 {JoinLiteral: three elements} {
    JoinLiteral [list one two three]
} {one, two, and three}

test common-2.6 {JoinLiteral: three elements, or} {
    JoinLiteral [list one two three] or
} {one, two, or three}

test common-2.7 {JoinLiteral: four elements} {
    JoinLiteral [list one two three four]
} {one, two, three, and four}

test common-2.8 {JoinLiteral: four elements, or} {
    JoinLiteral [list one two three four] or
} {one, two, three, or four}

################################################################################
# InList                                                                       #
################################################################################

test common-3.1 {InList: present} {
    InList [list one two three] two
} {1}

test common-3.2 {InList: present, no case} {
    InList [list one two three] TWO
} {1}

test common-3.3 {InList: not present} {
    InList [list one two three] four
} {0}


::tcltest::cleanupTests
return
