#
# AlcoBot - Alcoholicz site bot.
# Copyright (c) 2005-2006 Alcoholicz Scripting Team
#
# Module Name:
#   Flag Tests
#
# Author:
#   neoxed (neoxed@gmail.com) Aug 26, 2005
#
# Abstract:
#   Implements regression tests for flag parsing functions.
#

set currentPath [file dirname [file normalize [info script]]]
source [file join $currentPath "loader.tcl"]

################################################################################
# FlagGetValue                                                                 #
################################################################################

test flag-1.1 {FlagGetValue: no args} {
    list [catch {FlagGetValue} msg] $msg
} {1 {wrong # args: should be "FlagGetValue flagList flagName valueVar"}}

test flag-1.2 {FlagGetValue: invalid flag} {
    set value ""
    list [FlagGetValue {one=1 !two=2 inv@lid=2 !one=10} inv@lid value] $value
} {0 {}}

test flag-1.3 {FlagGetValue: valid flags} {
    set value ""
    list [FlagGetValue {one=1 !two=2 inv@lid=2 !one=10} two value] $value
} {1 2}

test flag-1.4 {FlagGetValue: first match wins} {
    set value ""
    list [FlagGetValue {one=1 !two=2 inv@lid=2 !two=10} two value] $value
} {1 2}

test flag-1.5 {FlagGetValue: match full flag names} {
    set value ""
    list [FlagGetValue {oneSix=16 !two=2 one=10} one value] $value
} {1 10}

################################################################################
# FlagExists                                                                   #
################################################################################

test flag-2.1 {FlagExists: no args} {
    list [catch {FlagExists} msg] $msg
} {1 {wrong # args: should be "FlagExists flagList flagName"}}

test flag-2.2 {FlagExists: invalid flag} {
    FlagExists {one=1 !two=2 inv@lid=2 !one=10} inv@lid
} {0}

test flag-2.3 {FlagExists: valid flags} {
    FlagExists {one=1 !two=2 inv@lid=2 !one=10} two
} {1}

test flag-2.4 {FlagExists: match full flag names} {
    FlagExists {one=1 inv@lid=2 twoSix=26} two
} {0}

################################################################################
# FlagIsDisabled                                                               #
################################################################################

test flag-3.1 {FlagIsDisabled: no args} {
    list [catch {FlagIsDisabled} msg] $msg
} {1 {wrong # args: should be "FlagIsDisabled flagList flagName"}}

test flag-3.2 {FlagIsDisabled: invalid flag} {
    FlagIsDisabled {one=1 !two=2 inv@lid=2 !one=10} inv@lid
} {0}

test flag-3.3 {FlagIsDisabled: disabled} {
    FlagIsDisabled {one=1 !two=2 inv@lid=2 crap !one=10} two
} {1}

test flag-3.4 {FlagIsDisabled: enabled} {
    FlagIsDisabled {one=1 !two=2 inv@lid=2 crap !one=10} crap
} {0}

test flag-3.5 {FlagIsDisabled: first match wins} {
    FlagIsDisabled {!one=1 !two=2 inv@lid=2 one=10} one
} {1}

test flag-2.6 {FlagIsDisabled: match full flag names} {
    FlagIsDisabled {one=1 inv@lid=2 twoSix !two} two
} {1}

################################################################################
# FlagIsEnabled                                                                #
################################################################################

test flag-4.1 {FlagIsEnabled: no args} {
    list [catch {FlagIsEnabled} msg] $msg
} {1 {wrong # args: should be "FlagIsEnabled flagList flagName"}}

test flag-4.2 {FlagIsEnabled: invalid flag} {
    FlagIsEnabled {one=1 !two=2 inv@lid=2 !one=10} inv@lid
} {0}

test flag-4.3 {FlagIsEnabled: disabled} {
    FlagIsEnabled {one=1 !two=2 inv@lid=2 crap !one=10} two
} {0}

test flag-4.4 {FlagIsEnabled: enabled} {
    FlagIsEnabled {one=1 !two=2 inv@lid=2 crap !one=10} crap
} {1}

test flag-4.5 {FlagIsEnabled: first match wins} {
    FlagIsEnabled {one=1 !two=2 inv@lid=2 !one=10} one
} {1}

test flag-4.6 {FlagIsDisabled: match full flag names} {
    FlagIsEnabled {one=1 inv@lid=2 !twoSix two} two
} {1}


::tcltest::cleanupTests
return
