################################################################################
# nxAutoNuke - Configuration                                                   #
################################################################################

#### Config Notes ##########################################
#
# - Do NOT comment or remove an option to disable it.
# - Use forward slashes for all file and directory paths.
#

#### General Settings ######################################
#
# - Use UTC time for dated directories, otherwise local time is used.
#
set misc(UtcTime)       True
#
# - User name to open for scheduled functions.
# - VFS file to mount for scheduled functions.
#
set misc(MountUser)     "sitebot"
set misc(MountFile)     "../etc/admin.vfs"
#
# - Path to ioA's executable file.
#
set misc(IoAPath)       "../scripts/ioA/ioA.exe"

#### AutoNuke Settings #####################################
#
# - User and group to use for auto-nuking (must be valid!).
# - Nuke the whole release or only the violating sub-directory.
#
set anuke(UserName)     "ioFTPD"
set anuke(GroupName)    "ioFTPD"
set anuke(SubDirs)      False
#
# - Bad and missing file extension (created by the zipscript).
#
set anuke(BadExt)       "*.bad"
set anuke(MissingExt)   "*.missing"
#
# - Maximum age of directories to check (minutes).
# - Exempt certain releases from being checked (case insensitive).
#
set anuke(MaximumAge)   1440
set anuke(Exempts)      {\\[nuked\\]-* \\[incomplete\\]-* (incomplete)-* \\[filled\\]-* *dirfix* *dir[._]fix* *nfofix* *nfo[._]fix* *nfoupdate* *nfo[._]update* *samplefix* *sample[._]fix*}
#
# - Display the uploaders for auto-nuke warning announcements.
# - Format of the uploaders list, cookies: %b = bold, %c = color,
#   %u = underline,  %(user), and %(group).
#
set anuke(WarnUsers)    True
set anuke(UserFormat)   "%b%(user)%b/%(group)"
set anuke(UserSplit)    ", "

#### AutoNuke Templates ####################################
#
# - Zipscript tag templates used for IMDB and MP3 checks.
# - Regular expression patterns are used to parse tag data.
# - See the "Directory Tags" section of the readme for examples.
#
set anuke(ImdbMatch)    {^\[IMDB\] - (.+) \((\d+)\) - ([\d\.]+) of 10 - \[IMDB\]$}
set anuke(ImdbOrder)    {genre year rating}
set anuke(MP3Match)     {^\[.*\] - \( .* - COMPLETE - (.+) (\d+) \) - \[.*\]$}
set anuke(MP3Order)     {genre year}
#
# - The approve tag format, to exempt approved releases.
#
set anuke(ApproveTag)   {approved_by_*}

#### AutoNuke Reasons ######################################
#
# - General Cookies:
#   %(age)        - Age of the release or sub-directory in minutes.
#
# - Special Cookies:
#   Allowed:
#     %(group)    - The release group's name.
#   Banned:
#     %(banned)   - The banned string which matched the release name.
#   Disks:
#     %(disks)    - Number of CDs/Disks the release had.
#     %(maxdisks) - The maximum number of disks allowed in that section.
#   IMDB:
#     %(type)     - The type of violation (genre, rating, or year).
#     %(banned)   - The banned value (i.e. the release's genre, rating, or year).
#   Keyword:
#     %(banned)   - The banned keyword (bootleg, live, etc.).
#   MP3:
#     %(type)     - The type of violation (bitrate, genre, or year).
#     %(banned)   - The banned value (i.e. the release's bitrate, genre, or year).
#   Size:
#     %(type)     - The type of violation (minimum or maximum).
#     %(size)     - Size of the release.
#
set anuke(ReasonAllowed) "group.not.allowed"
set anuke(ReasonBanned)  "banned.release.%(banned)"
set anuke(ReasonDisks)   "maximum.of.%(maxdisks).disks"
set anuke(ReasonEmpty)   "empty.after.%(age).minutes"
set anuke(ReasonImdb)    "banned.%(type).%(banned)"
set anuke(ReasonInc)     "incomplete.after.%(age).minutes"
set anuke(ReasonKeyword) "banned.type.%(banned)"
set anuke(ReasonMP3)     "banned.%(type).%(banned)"
set anuke(ReasonSize)    "%(type).size.is.%(size)MB"

#### AutoNuke Sections #####################################
#
# - Here you define the paths and type of auto-nuke checks to perform.
#   <virtual path> <day offset> {
#       {<check type> <check settings> <nuke multiplier> <warn time> <nuke time>}
#   }
#   Virtual Path - The path to check, which may contain date cookies, %d for day, %W for week
#                  number, %m for month, %y for year (04), and %Y for year with century (2004).
#   Day Offset   - Offset of the current day (-1 for yesterday, 0 for today, 1 for tomorrow, etc.).
#   Warn Time    - Number of minutes to wait until announcing an auto-nuke warning.
#   Nuke Time    - Number of minutes to wait until nuking the release.
#
# - Check Types:
#   allowed:
#     - Allowed release groups, all other groups will be nuked.
#     - Check Settings: Allowed groups, you may use wild-cards.
#   banned:
#     - Banned patterns in the release name.
#     - Check Settings: Banned strings, you may use wild-cards.
#   disks:
#     - Maximum number of disks (CDs, Disks, and DVDs).
#     - Check Settings: Maximum number of disks, anything larger then this will be nuked.
#   empty:
#     - Empty releases (no files).
#     - Check Settings: Not used for empty checks.
#   imdb:
#     - Banned genres, low ratings, or unaccepted years.
#     - Check Settings: genre:<banned genre> rating:<minimum rating> year:<allowed year>
#   incomplete:
#     - Incomplete releases (checks for *.bad or *.missing files).
#     - Check Settings: Not used for incomplete checks.
#   keyword:
#     - Banned keywords in the release name. This method works similar to
#       the "banned" check, but with improved accuracy.
#     - Check Settings: banned release keywords (no wild-cards).
#   mp3:
#     - Banned genres or unaccepted years.
#     - Check Settings: {bitrate:<min> <max>} genre:<banned genre> year:<allowed year>
#   size:
#     - Minimum and maximum release sizes (in megabytes).
#     - To disable the minimum check or maximum check, set the size value to 0.
#     - Check Settings: <min size> <max size>
#
set anuke(Sections) {
    "/0DAY/%m%d" 0 {
        {banned     {*-A51 *-HS *-TiC *-YAG} 10 0 0}
        {empty      {Not Used} 3 20 40}
        {keyword    {beta comic macos macosx} 3 20 40}
    }
    "/APPS" 0 {
        {disks      5          3 20 40}
        {empty      {Not Used} 3 20 40}
        {incomplete {Not Used} 3 20 40}
        {size       {100 5000} 3 20 40}
    }
    "/GAMES" 0 {
        {empty      {Not Used} 3 20 40}
        {incomplete {Not Used} 3 20 40}
        {size       {100 5000} 3 20 40}
    }
    "/MP3/%m%d" 0 {
        {empty      {Not Used} 3 20 40}
        {incomplete {Not Used} 3 20 40}
        {keyword    {cable dab demo dvb mixtape radio sample sat tape} 3 20 40}
        {mp3        {{bitrate:128 0} genre:country {genre:drum & bass} genre:*rap genre:*punk year:200[3-6]} 5 20 40}
    }
    "/MP3/%m%d" -1 {
        {empty      {Not Used} 3 20 40}
        {incomplete {Not Used} 3 20 40}
        {keyword    {cable dab demo dvb mixtape radio sample sat tape} 3 20 40}
        {mp3        {{bitrate:128 0} genre:country {genre:drum & bass} genre:*rap genre:*punk year:200[3-6]} 5 20 40}
    }
    "/REQS" 0 {
        {size       {0 5000}   3 20 40}
    }
    "/SVCD" 0 {
        {disks      3          3 20 40}
        {empty      {Not Used} 3 20 40}
        {imdb       {genre:*documentary* genre:*romance* rating:5 year:200[3-6]} 3 5 20}
        {incomplete {Not Used} 3 20 40}
    }
    "/VCD" 0 {
        {disks      3          3 20 40}
        {empty      {Not Used} 3 20 40}
        {imdb       {genre:*documentary* genre:*romance* rating:4 year:200[3-6]} 3 5 20}
        {incomplete {Not Used} 3 20 40}
    }
    "/XXX" 0 {
        {allowed    {LonelyWankers JackOffs MasterDebators} 3 5 20}
        {disks      3          3 20 40}
        {empty      {Not Used} 3 20 40}
        {incomplete {Not Used} 3 20 40}
    }
}

#### End of Settings #######################################
